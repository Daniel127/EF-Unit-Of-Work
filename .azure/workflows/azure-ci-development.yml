# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop
- release/*

pr:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Debug'

steps:

# Install .NET Core SDK
- task: UseDotNet@2
  displayName: 'Install Net Core 2.2'
  inputs:
    version: '2.2.x'
- task: UseDotNet@2
  displayName: 'Install Net Core 3.1'
  inputs:
    version: '3.1.x'

# SonarCloud Prepare Analysis
- task: SonarCloudPrepare@1
  displayName: 'Prepare analysis configuration'
  inputs:
    SonarCloud: 'SonarCloud Daniel127'
    organization: 'daniel127'
    scannerMode: 'MSBuild'
    projectKey: 'ef-unit-of-work'
    projectName: 'EF-Unit-Of-Work'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/*.dll
      sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/coverage/coverage.opencover.xml
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

# Build solution
- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

# Test solution
- task: DotNetCoreCLI@2
  displayName: 'Execute tests'
  inputs:
    command: test
    nobuild: true
    arguments: --logger trx -c $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover%2ccobertura /p:CoverletOutput=$(Agent.TempDirectory)/coverage/ --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator tool'
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool

- script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
  displayName: 'Create reports'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

# SonarCloud analyze and publish results
- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud analysis'
- task: SonarCloudPublish@1
  displayName: 'Publish results on SonarCloud'
  inputs:
    pollingTimeoutSec: '300'